import hljs from "highlight.js/lib/core";

function highight_esql() {
  const COMMENT_MODE = hljs.COMMENT("//", "$", {
    contains: [
      {
        scope: "doc",
        begin: "@\\w+",
      },
    ],
  });

  const BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/", {
    contains: [
      {
        scope: "doc",
        begin: "@\\w+",
      },
    ],
  });

  const STRING = {
    scope: "string",
    variants: [
      {
        begin: /"/,
        end: /"/,
        contains: [{ match: /""/ }],
      },
      {
        begin: /"""/,
        end: /"""/,
        contains: [{ match: /"""/ }],
      },
    ],
  };

  const LITERALS = ["true", "false", "null"];

  const KEYWORDS = [
    "FROM",
    "ROW",
    "SHOW",
    "INFO",
    "WHERE",
    "KEEP",
    "DROP",
    "EVAL",
    "STATS",
    "SORT",
    "BY",
    "AND",
    "OR",
    "METADATA",
    "DESC",
    "ASC",
    "AS",
    "IS",
    ":",
  ];

  const FUNCTIONS = [
    "ABS",
    "ACOS",
    "ASIN",
    "ATAN",
    "ATAN2",
    "AVG",
    "BUCKET",
    "CASE",
    "CBRT",
    "CEIL",
    "CIDR_MATCH",
    "COALESCE",
    "CONCAT",
    "COS",
    "COSH",
    "COUNT",
    "COUNT_DISTINCT",
    "DATE_DIFF",
    "DATE_EXTRACT",
    "DATE_FORMAT",
    "DATE_PARSE",
    "DATE_TRUNC",
    "DISSECT",
    "DROP",
    "E",
    "ENDS_WITH",
    "ENRICH",
    "EVAL",
    "EXP",
    "FLOOR",
    "FROM",
    "FROM_BASE64",
    "GREATEST",
    "GROK",
    "IP_PREFIX",
    "KEEP",
    "LEAST",
    "LEFT",
    "LENGTH",
    "LIMIT",
    "LOCATE",
    "LOG",
    "LOG10",
    "LOOKUP",
    "LTRIM",
    "MAX",
    "MEDIAN",
    "MEDIAN_ABSOLUTE_DEVIATION",
    "MIN",
    "MV_APPEND",
    "MV_AVG",
    "MV_CONCAT",
    "MV_COUNT",
    "MV_DEDUPE",
    "MV_EXPAND",
    "MV_FIRST",
    "MV_LAST",
    "MV_MAX",
    "MV_MEDIAN",
    "MV_MIN",
    "MV_PSERIES_WEIGHTED_SUM",
    "MV_SLICE",
    "MV_SORT",
    "MV_SUM",
    "MV_ZIP",
    "NOW",
    "PERCENTILE",
    "PI",
    "POW",
    "RENAME",
    "REPEAT",
    "REPLACE",
    "RIGHT",
    "ROUND",
    "ROW",
    "RTRIM",
    "SHOW",
    "SIGNUM",
    "SIN",
    "SINH",
    "SORT",
    "SPLIT",
    "SQRT",
    "ST_CENTROID_AGG",
    "ST_CONTAINS",
    "ST_DISJOINT",
    "ST_DISTANCE",
    "ST_INTERSECTS",
    "ST_WITHIN",
    "ST_X",
    "ST_Y",
    "STARTS_WITH",
    "STATS ... BY",
    "SUBSTRING",
    "SUM",
    "TAN",
    "TANH",
    "TAU",
    "TO_BASE64",
    "TO_BOOLEAN",
    "TO_CARTESIANPOINT",
    "TO_CARTESIANSHAPE",
    "TO_DATETIME",
    "TO_DEGREES",
    "TO_DOUBLE",
    "TO_GEOPOINT",
    "TO_GEOSHAPE",
    "TO_INTEGER",
    "TO_IP",
    "TO_LONG",
    "TO_LOWER",
    "TO_RADIANS",
    "TO_STRING",
    "TO_UNSIGNED_LONG",
    "TO_UPPER",
    "TO_VERSION",
    "TOP",
    "TRIM",
    "VALUES",
    "WEIGHTED_AVG",
    "WHERE",
  ];

  const NUMBERS = {
    scope: "number",
    variants: [
      { match: /\b\d+(\.\d+)?([eE][-+]?\d+)?\b/ },
      { match: /\b\d+(\.\d+)?\b/ },
    ],
  };

  const TIME_UNITS = {
    scope: "literal",
    match: /\b\d+(day|h|min|s|ms)\b/,
  };

  return {
    name: "ES|QL",
    case_insensitive: true,
    keywords: {
      keyword: KEYWORDS,
      literal: LITERALS,
      built_in: FUNCTIONS,
    },
    contains: [
      STRING,
      NUMBERS,
      TIME_UNITS,
      COMMENT_MODE,
      BLOCK_COMMENT_MODE,
      {
        scope: "operator",
        match: /\|/,
      },
    ],
  };
}

hljs.registerLanguage("esql", highight_esql);
